#################################################################
#################################################################
# Configuration settings for the genome erosion workflow v3.0   #
# for ancient or historical samples, and modern samples         #
#################################################################
#################################################################

#################################################################
#################################################################
# Check the README.pdf for the full documentation.              #
#################################################################
#################################################################


#################################################################
#################################################################
# 1) Full path to reference genome assembly.
# Reference genome has to be checked for short and concise fasta 
# headers without special characters. 
# File name extension can be ".fasta" or ".fa".
ref_path: ".test/data/references/reference_shortreads.fasta"
#################################################################


#################################################################
# 2) Relative paths (from the main snakemake directory) to metadata tables of samples.
# Example files can be found in "config/"
historical_samples: ".test/config/historical_paths.txt" # leave empty ("") if not run for historical samples.
modern_samples: "" # leave empty ("") if not run for modern samples. 
#################################################################
#################################################################



#################################################################
#################################################################
# 3) Workflow steps to be run and related parameters. 
# If a step is set to True, all previous steps it depends on will be loaded automatically.
# Only one step should be set to True at a time, results and reports should be double checked before continuing.


#################################################################
#################################################################
# Rules for data processing (required for downstream analyses)  #
#################################################################

#####
# Repeat element de novo prediction and repeat masking of the reference genome.
# Generates BED files of repeats and repeat-masked regions for the reference genome.
# Output files will be placed into the same directory as the reference genome fasta file (as specified above).
# That way, this step is run only once for a given reference genome.
reference_repeat_identification: False
#####


#####
# FastQC on raw reads, adapter trimming, read merging (historical samples), FastQC on trimmed reads.
fastq_processing: False

# Adapter sequences for trimming of historical samples using SeqPrep v1.1 (modified source code) (examples for inserted adapter sequences from Meyer & Kircher 2010).
# Forward read primer/adapter sequence to trim historical samples in SeqPrep v1.1 (parameter "-A")
hist_F_adapter: "AGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNNATCTCGTATGCCGTCTTCTGCTTG" 
# Reverse read primer/adapter sequence to trim historical samples in SeqPrep v1.1 (parameter "-B"). 
# When using double indices, include full adapter length (replacing the index by "N").
hist_R_adapter: "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTT" 

# Fragment of forward adapter sequence used to count occurrence in the first 1 million reads of fastq-files of historical samples
hist_F_adapter_fragment: "AGATCGGAAGAGCACACGTC" 
# Fragment of reverse adapter sequence used to count occurrence in the first 1 million reads of fastq-files of historical samples
hist_R_adapter_fragment: "AGATCGGAAGAGCGTCGTGT" 

# Minimum read length allowed after trimming.
# Historical samples (SeqPrep v1.1 with modified source code)
hist_readlength: "30" # default setting: 30 bp

# Modern samples (trim-galore)
mod_readlength: "30"
#####


#####
# OPTIONAL: 
# Map historical reads to mitochondrial genomes from human and several animal species. 
# Specify mitochondrial genome of target species ("species_mt").
# This step does not produce any files required for any of the downstream steps and 
# is therefore not included when running any of the downstream steps.
map_historical_to_mitogenomes: True

# Full path including file name of mitochondrial genome fasta of 
# the species under investigation, or that of a closely related species.
# The fasta file has to be named according to this scheme: "speciesname_accession_number.fasta"
# so that the workflow can re-use the file name properly.
# The file name extension can be ".fasta", ".fa" or ".fna".
# Variable can be left empty ("") if not run.
species_mt_path: ".test/data/references/mitogenome_NC_123456.fasta" # e.g. "/path/to/speciesname_accession_number.fasta"

# Per default, only merged historical reads are mapped to the different mitochondrial genomes.
# If both merged and unmerged reads should be mapped, set the following variable to True.
map_unmerged_reads: False 
#####


#####
# Map historical and modern reads to reference genome assembly (specified above).
mapping: False
#####


#####
# BAM file processing: sort, merge samples from different lanes per PCR/index, 
# remove duplicates, merge BAM files per sample, realign indels, calculate average depth.
bam_rmdup_realign_indels: False

# Parameters related to depth filtering of BAM and VCF files.
# After BAM file processing, the average genome-wide depth is calculated 
# per sample, from which minimum and maximum depth thresholds for quality filtering are determined.
# In the calculation of the average genome-wide depth, sites with missing data (i.e. zero coverage) can be included or excluded.
# Set to True if sites with missing data (zero coverage) should be included from the average depth calculation.
# Set to False if sites with missing data (zero coverage) should be excluded from the average depth calculation.
zerocoverage: False

# Minimum depth threshold calculation per sample.
# Will be applied to mlRho analysis and in VCF file filtering.
# Factor by which the average genome-wide depth should be multiplied to set a minimum depth threshold.
# For low coverage samples, a minimum hard threshold of 3X is applied.
minDP: 0.33

# Maximum depth threshold calculation per sample.
# Will be applied to mlRho analysis and in VCF file filtering.
# Factor by which the average genome-wide depth should be multiplied to set a maximum depth threshold.
maxDP: 10
#####


#####
# CHECKPOINT:
# Depth histograms are plotted, including minimum and maximum depth thresholds 
# and average genome-wide depth as vertical lines.
# Carefully check the multiQC reports as well as these files and adjust the 
# depth parameters above if necessary before moving on:
# "results/*/mapping/stats/bams_indels_realigned/*.merged.rmdup.merged.realn.repma.Q30.bam.dp.hist.pdf"
#####


#####
# OPTIONAL: 
# Run mapDamage2 on historical samples specified in the list "historical_rescaled_samplenames" below.
# Will rescale base qualities at potentially damaged sites and 
# calculate statistics on ancient DNA damage patterns in realigned bam files.
historical_bam_mapDamage: False

# List of historical samples on which mapDamage2 should be run. 
# Sample names without lane or index number in quotation marks, 
# separated by commas (e.g. ["VK01", "VK02", "VK03"]).
# List has to be left empty ([]) if mapDamage2 is not run.
# Keep the list of sample names for the entire workflow run 
# if rescaled BAM files should be used in downstream analyses.
historical_rescaled_samplenames: []
#####


#####
# OPTIONAL: 
# Subsample BAM files to a certain average genome-wide depth of coverage to reduce biases in downstream analyses.
bam_subsampling: False

# Depth to which BAM files specified in the list below should be subsampled.
# Check "results/*/mapping/stats/bams_indels_realigned/*.merged.rmdup.merged.realn.repma.Q30.bam.dpstats.txt" 
# and "results/*/mapping/stats/bams_indels_realigned/*.merged.rmdup.merged.realn.repma.Q30.bam.dp.hist.pdf" files 
# to screen the dataset for an appropriate depth for subsampling.
# Has to be lower than or equal to the average depth of the sample with the lowest depth in the list below.
# Keep the variable for the entire workflow run so that the correct files are used for downstream analyses.
# Has to be set to False if not run.
subsampling_depth: False

# Combined list of modern and historical samples that should be subsampled to a common depth.
# Sample names without lane or index number in quotation marks, 
# separated by commas (e.g. ["VK01", "VK02", "VK03"]). 
# List has to be left empty ([]) if subsampling is not run.
# Keep the list of sample names for the entire workflow run 
# if subsampled BAM files should be used in downstream analyses.
subsampling_samplenames: []
#####


#####
# Call variants in all historical and modern samples from BAM files 
# processed with mandatory (and optional, if chosen) steps listed above.
# Required for CpG filtering of BAM files for mlRho, ROH estimation, PCA plotting and SNP annotation.
genotyping: False
#####


#####
# OPTIONAL:
# Identify CpG sites for removal from VCF files and from downstream analyses.
# Three different methods are available to identify CpG sites (see below).

# This step will generate several BED files containing genome coordinates 
# of CpG sites (file name ending with: "CpG_method.bed"), 
# all genome regions outside of CpG sites ("noCpG_method.bed"), as well as 
# intersected BED files of coordinates of CpG sites and repeat elements 
# ("CpG_method.repeats.bed") and regions outside of CpG sites and 
# repeat elements ("noCpG_method.repma.bed").

# Set CpG_identification and one of the three methods listed below to True and
# specify samples in the list below in which CpG sites should be identified and/or 
# from which CpG sites should be removed.
CpG_identification: False

# Method 1: 
# Identify CpG sites in single-individual VCF files of samples listed below.
# BED files with CpG sites from all samples are merged into one file for CpG site filtering.
# Only genotype information is considered for CpG site identification.
# Has to be kept at True for the rest of the workflow, if chosen method for CpG identification,
# so that the correct files are used for downstream analyses.
CpG_from_vcf: False

# Method 2: 
# Identify CpG sites in the reference genome.
# Ignores genotype information of samples mapped to the reference genome.
# Has to be kept at True for the rest of the workflow, if chosen method for CpG identification,
# so that the correct files are used for downstream analyses.
CpG_from_reference: False

# Method 3: 
# Identify CpG sites in single-individual VCF files and in the reference genome.
# BED files with CpG sites from all samples and from the reference genome are 
# merged into one file for CpG site filtering.
# Has to be kept at True for the rest of the workflow, if chosen method for CpG identification,
# so that the correct files are used for downstream analyses.
CpG_from_vcf_and_reference: False

# Combined list of modern and historical samples in which CpG sites should be identified
# if CpG_from_vcf or CpG_from_vcf_and_reference is set to True, 
# and from which CpG sites should be removed based on any of the three 
# CpG identification methods chosen above.
# Sample names without lane or index number in quotation marks, 
# separated by commas (e.g. ["VK01", "VK02", "VK03"]).
# List has to be left empty ([]) if neither CpG identification nor CpG site filtering is run.
# Keep the list of sample names for the entire workflow run 
# so that the correct files are used for downstream analyses.
CpG_samplenames: []
#####


#################################################################
#################################################################



#################################################################
#################################################################
# Rules for BAM file processing for mlRho                       #
#################################################################

#####
# OPTIONAL: 
# Generate BED files of autosomes and sex chromosomes for mlRho analyses, 
# in case these should be analyzed separately from each other (see below for further options).
# Includes intersecting of the new chromosome-specific BED files 
# with CpG- and repeat-masking BED files for downstream filtering.
autosome_sexchromosome_bed_files: False

# Relative path (from the main snakemake directory) to file listing 
# scaffolds/contigs linked to sex chromosomes (one scaffold/contig name per line).
# Leave empty ("") if identity of sex chromosomes unknown and/or 
# if mlRho should be run on all scaffolds/contigs of the genome.
# Keep the path to the file when running the next step (mlRho) 
# separately for autosomes and sex chromosomes or only for autosomes.
sexchromosomes: "" # for example, "config/chrX_candidate_scaffolds.txt"
#####


#####
# Run mlRho 2.9 on filtered BAM files.
# Default filters: quality, depth (based on parameters set above) and repeat elements.
# Keep the sample lists and parameters for any desired optional data filtering step (as described above).
mlRho: False

# There are three options how to run mlRho:
# 1) If the identity of sex-chromosomal contigs/scaffolds is unknown 
# and/or mlRho should be run on all contigs/scaffolds,
# set mlRho_autosomes_sexchromosomes to False and do not provide a path 
# to a text file with sex-chromosomal contigs/scaffolds above when running mlRho.
#
# 2) If the identity of sex-chromosomal contigs/scaffolds is known, 
# mlRho analyses can be run for autosomes and sex chromosomes separately from each other.
# In that case, set mlRho_autosomes_sexchromosomes to True and provide the path 
# to the file with sex-chromosomal contigs/scaffolds above when running mlRho.
#
# 3) If the identity of sex-chromosomal contigs/scaffolds is known, 
# sex-chromosomal contigs/scaffolds can be entirely excluded from the analysis.
# In that case, set mlRho_autosomes_sexchromosomes to False and provide the path 
# to the file with sex-chromosomal contigs/scaffolds above when running mlRho.
mlRho_autosomes_sexchromosomes: False
#####
#################################################################
#################################################################



#################################################################
#################################################################
# Rules for VCF file processing for PCA plots, ROH estimation   #
# and SNP annotation                                            #
#################################################################

#####
# OPTIONAL: 
# Remove CpG sites from BCF files of samples specified in the 
# list "CpG_samplenames" under "CpG_identification".
vcf_CpG_filtering: False
#####


#####
# Filter BCF files of historical and modern samples for quality, 
# depth (based on parameters set above), indels, allelic imbalance, 
# and remove repeat regions that were identified in the reference genome.
vcf_qual_repeat_filtering: False
#####


#####
# Merge all historical BCF files into one BCF file, 
# and all modern BCF files into another BCF file.
merge_vcfs_per_dataset: False
#####
#################################################################
#################################################################



#################################################################
#################################################################
# Rules for PCA, ROH estimation and SNP annotation              #
#################################################################

#####
# Plot PCAs for all historical, all modern, and all modern and historical samples combined.
# Automatically generates PDF files with plots of PC1 vs. PC2 and PC1 vs. PC3.
pca: False
#####


#####
# Run plink 1.9 on merged BCF files to estimate runs of homozygosity.
ROH: False

# Parameters:
# Set a fixed combination of the following parameters for a given run. 
# See https://www.cog-genomics.org/plink/1.9/ibd#homozyg for more details.

# Minimum SNP count. For example, 10, 25. Abbreviation in file name: homsnp.
homozyg-snp: 25 
# Minimum size of ROH in kilobases. Abbreviation in file name: homkb.
homozyg-kb: 1000 
# Window size for ROH estimation. For example, 20, 50, 100, 1000. Abbreviation in file name: homwinsnp.
homozyg-window-snp: 1000 
# Maximum number of heterozygote sites per window. For example, 1 for a stringent analysis, 3 for a relaxed setting. 
# Abbreviation in file name: homwinhet.
homozyg-window-het: 1 
# Maximum number of missing sites per window. For example, 1 or 5 for a stringent analysis, 
# 10 for intermediate filtering and 15 for relaxed filtering. Abbreviation in file name: homwinmis.
homozyg-window-missing: 5 
# Maximum number of heterozygote sites per ROH. For example, 1 for a stringent analysis, 
# 3 as a relaxed setting. Disable this parameter by setting it to 999. Abbreviation in file name: homhet.
homozyg-het: 999 
#####


#####
# Run snpEff v4.3.1 on per-sample BCF files to annotate SNPs.
snpEff: False

# Full path to GTF file (GTF format version 2.2) with gene model predictions 
# for the reference genome that was used for mapping.
# Read here about tools for file format conversions from GFF to GTF: 
# https://github.com/NBISweden/GAAS/blob/master/annotation/knowledge/gff_to_gtf.md
# Output files from building the snpEff database will be placed into the same directory as the GTF file.
# That way, the database has to be built only once for a given GTF file.
gtf_path: ""
#################################################################
#################################################################


#################################################################
#################################################################
# Rules for GERP++ score calculations                           #
#################################################################

#####
# Estimate GERP++ scores for the reference genome of the target species.
# Runs independently of the other steps of the workflow.
# Requires path to reference genome as provided at the beginning of the config file.
gerp: False

# Full path to directory containing reference genomes of outgroup species in 
# fasta format for GERP++ score estimation.
# Files have to be gzipped and fasta file name extensions can be 
# ".fa.gz", ".fasta.gz" or ".fna.gz".
gerp_ref_path: ""

# Full path to phylogenetic tree of all species included in the analysis 
# (including the target species) in NEWICK format and including divergence time estimates.
# Species names in the tree have to be identical to the fasta file names without ".fa.gz".
tree: ""
#####
